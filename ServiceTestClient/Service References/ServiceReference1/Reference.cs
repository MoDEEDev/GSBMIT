//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceTestClient.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CentralRegistration", Namespace="http://schemas.datacontract.org/2004/07/MoICT.Entities")]
    [System.SerializableAttribute()]
    public partial class CentralRegistration : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> HasDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string REGAUTZDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Regps01Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> decCapitalValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> decRegistryNationalNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> decRegistryNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> dtmCommercialNameDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> dtmRegistryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> intCommercialNameNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> intID_NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> intIndv_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceTestClient.ServiceReference1.TradeMark[] lstTradeMarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> p_indv_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal regcn_noField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> reggovField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strAuthorizedSignatoryForFinancialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strAuthorizedSignatoryForManagementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strGovernorateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ServiceTestClient.ServiceReference1.RegisteryPurposes[] strRegisteryPurposesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strRegistryAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strRegistryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strRegistryNationalityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strRegistryOwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strRegistryPurposeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strRegistryStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> HasData {
            get {
                return this.HasDataField;
            }
            set {
                if ((this.HasDataField.Equals(value) != true)) {
                    this.HasDataField = value;
                    this.RaisePropertyChanged("HasData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string REGAUTZD {
            get {
                return this.REGAUTZDField;
            }
            set {
                if ((object.ReferenceEquals(this.REGAUTZDField, value) != true)) {
                    this.REGAUTZDField = value;
                    this.RaisePropertyChanged("REGAUTZD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Regps01 {
            get {
                return this.Regps01Field;
            }
            set {
                if ((object.ReferenceEquals(this.Regps01Field, value) != true)) {
                    this.Regps01Field = value;
                    this.RaisePropertyChanged("Regps01");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> decCapitalValue {
            get {
                return this.decCapitalValueField;
            }
            set {
                if ((this.decCapitalValueField.Equals(value) != true)) {
                    this.decCapitalValueField = value;
                    this.RaisePropertyChanged("decCapitalValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> decRegistryNationalNo {
            get {
                return this.decRegistryNationalNoField;
            }
            set {
                if ((this.decRegistryNationalNoField.Equals(value) != true)) {
                    this.decRegistryNationalNoField = value;
                    this.RaisePropertyChanged("decRegistryNationalNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> decRegistryNo {
            get {
                return this.decRegistryNoField;
            }
            set {
                if ((this.decRegistryNoField.Equals(value) != true)) {
                    this.decRegistryNoField = value;
                    this.RaisePropertyChanged("decRegistryNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> dtmCommercialNameDate {
            get {
                return this.dtmCommercialNameDateField;
            }
            set {
                if ((this.dtmCommercialNameDateField.Equals(value) != true)) {
                    this.dtmCommercialNameDateField = value;
                    this.RaisePropertyChanged("dtmCommercialNameDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> dtmRegistryDate {
            get {
                return this.dtmRegistryDateField;
            }
            set {
                if ((this.dtmRegistryDateField.Equals(value) != true)) {
                    this.dtmRegistryDateField = value;
                    this.RaisePropertyChanged("dtmRegistryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> intCommercialNameNo {
            get {
                return this.intCommercialNameNoField;
            }
            set {
                if ((this.intCommercialNameNoField.Equals(value) != true)) {
                    this.intCommercialNameNoField = value;
                    this.RaisePropertyChanged("intCommercialNameNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> intID_Number {
            get {
                return this.intID_NumberField;
            }
            set {
                if ((this.intID_NumberField.Equals(value) != true)) {
                    this.intID_NumberField = value;
                    this.RaisePropertyChanged("intID_Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> intIndv_ID {
            get {
                return this.intIndv_IDField;
            }
            set {
                if ((this.intIndv_IDField.Equals(value) != true)) {
                    this.intIndv_IDField = value;
                    this.RaisePropertyChanged("intIndv_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceTestClient.ServiceReference1.TradeMark[] lstTradeMarks {
            get {
                return this.lstTradeMarksField;
            }
            set {
                if ((object.ReferenceEquals(this.lstTradeMarksField, value) != true)) {
                    this.lstTradeMarksField = value;
                    this.RaisePropertyChanged("lstTradeMarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> p_indv_id {
            get {
                return this.p_indv_idField;
            }
            set {
                if ((this.p_indv_idField.Equals(value) != true)) {
                    this.p_indv_idField = value;
                    this.RaisePropertyChanged("p_indv_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal regcn_no {
            get {
                return this.regcn_noField;
            }
            set {
                if ((this.regcn_noField.Equals(value) != true)) {
                    this.regcn_noField = value;
                    this.RaisePropertyChanged("regcn_no");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> reggov {
            get {
                return this.reggovField;
            }
            set {
                if ((this.reggovField.Equals(value) != true)) {
                    this.reggovField = value;
                    this.RaisePropertyChanged("reggov");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strAuthorizedSignatoryForFinancial {
            get {
                return this.strAuthorizedSignatoryForFinancialField;
            }
            set {
                if ((object.ReferenceEquals(this.strAuthorizedSignatoryForFinancialField, value) != true)) {
                    this.strAuthorizedSignatoryForFinancialField = value;
                    this.RaisePropertyChanged("strAuthorizedSignatoryForFinancial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strAuthorizedSignatoryForManagement {
            get {
                return this.strAuthorizedSignatoryForManagementField;
            }
            set {
                if ((object.ReferenceEquals(this.strAuthorizedSignatoryForManagementField, value) != true)) {
                    this.strAuthorizedSignatoryForManagementField = value;
                    this.RaisePropertyChanged("strAuthorizedSignatoryForManagement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strGovernorateName {
            get {
                return this.strGovernorateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.strGovernorateNameField, value) != true)) {
                    this.strGovernorateNameField = value;
                    this.RaisePropertyChanged("strGovernorateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceTestClient.ServiceReference1.RegisteryPurposes[] strRegisteryPurposes {
            get {
                return this.strRegisteryPurposesField;
            }
            set {
                if ((object.ReferenceEquals(this.strRegisteryPurposesField, value) != true)) {
                    this.strRegisteryPurposesField = value;
                    this.RaisePropertyChanged("strRegisteryPurposes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strRegistryAddress {
            get {
                return this.strRegistryAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.strRegistryAddressField, value) != true)) {
                    this.strRegistryAddressField = value;
                    this.RaisePropertyChanged("strRegistryAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strRegistryName {
            get {
                return this.strRegistryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.strRegistryNameField, value) != true)) {
                    this.strRegistryNameField = value;
                    this.RaisePropertyChanged("strRegistryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strRegistryNationality {
            get {
                return this.strRegistryNationalityField;
            }
            set {
                if ((object.ReferenceEquals(this.strRegistryNationalityField, value) != true)) {
                    this.strRegistryNationalityField = value;
                    this.RaisePropertyChanged("strRegistryNationality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strRegistryOwner {
            get {
                return this.strRegistryOwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.strRegistryOwnerField, value) != true)) {
                    this.strRegistryOwnerField = value;
                    this.RaisePropertyChanged("strRegistryOwner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strRegistryPurpose {
            get {
                return this.strRegistryPurposeField;
            }
            set {
                if ((object.ReferenceEquals(this.strRegistryPurposeField, value) != true)) {
                    this.strRegistryPurposeField = value;
                    this.RaisePropertyChanged("strRegistryPurpose");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strRegistryStatus {
            get {
                return this.strRegistryStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.strRegistryStatusField, value) != true)) {
                    this.strRegistryStatusField = value;
                    this.RaisePropertyChanged("strRegistryStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TradeMark", Namespace="http://schemas.datacontract.org/2004/07/MoICT.Entities")]
    [System.SerializableAttribute()]
    public partial class TradeMark : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> decCompanyNOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> decTMSGOVField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal decTradeMarkNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> decTradeMarkOwnerPOBoxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> decTradeMarkOwnerPostCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short distField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> dtmApplicationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> intAgencyNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> intClassNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> intDistField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strAgencyNameArField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strAgencyNameEnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strClassNoArField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strClassNoEnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strCompanyTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strCompanyTypeDescArField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strCompanyTypeDescEnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strCountryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strCountryCodeDescArField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strCountryCodeDescEnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strTradeMarkArNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strTradeMarkEnNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strTradeMarkOwnerAddressArField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strTradeMarkOwnerAddressEnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strTradeMarkOwnerArField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strTradeMarkOwnerCityArField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strTradeMarkOwnerCityEnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strTradeMarkOwnerCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strTradeMarkOwnerEnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strTradeMarkOwnerTelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strTradeMarkStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strTradeMarkStatusDescArField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strTradeMarkStatusDescEnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string trdmark_statusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> decCompanyNO {
            get {
                return this.decCompanyNOField;
            }
            set {
                if ((this.decCompanyNOField.Equals(value) != true)) {
                    this.decCompanyNOField = value;
                    this.RaisePropertyChanged("decCompanyNO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> decTMSGOV {
            get {
                return this.decTMSGOVField;
            }
            set {
                if ((this.decTMSGOVField.Equals(value) != true)) {
                    this.decTMSGOVField = value;
                    this.RaisePropertyChanged("decTMSGOV");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal decTradeMarkNo {
            get {
                return this.decTradeMarkNoField;
            }
            set {
                if ((this.decTradeMarkNoField.Equals(value) != true)) {
                    this.decTradeMarkNoField = value;
                    this.RaisePropertyChanged("decTradeMarkNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> decTradeMarkOwnerPOBox {
            get {
                return this.decTradeMarkOwnerPOBoxField;
            }
            set {
                if ((this.decTradeMarkOwnerPOBoxField.Equals(value) != true)) {
                    this.decTradeMarkOwnerPOBoxField = value;
                    this.RaisePropertyChanged("decTradeMarkOwnerPOBox");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> decTradeMarkOwnerPostCode {
            get {
                return this.decTradeMarkOwnerPostCodeField;
            }
            set {
                if ((this.decTradeMarkOwnerPostCodeField.Equals(value) != true)) {
                    this.decTradeMarkOwnerPostCodeField = value;
                    this.RaisePropertyChanged("decTradeMarkOwnerPostCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short dist {
            get {
                return this.distField;
            }
            set {
                if ((this.distField.Equals(value) != true)) {
                    this.distField = value;
                    this.RaisePropertyChanged("dist");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> dtmApplicationDate {
            get {
                return this.dtmApplicationDateField;
            }
            set {
                if ((this.dtmApplicationDateField.Equals(value) != true)) {
                    this.dtmApplicationDateField = value;
                    this.RaisePropertyChanged("dtmApplicationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> intAgencyNo {
            get {
                return this.intAgencyNoField;
            }
            set {
                if ((this.intAgencyNoField.Equals(value) != true)) {
                    this.intAgencyNoField = value;
                    this.RaisePropertyChanged("intAgencyNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> intClassNo {
            get {
                return this.intClassNoField;
            }
            set {
                if ((this.intClassNoField.Equals(value) != true)) {
                    this.intClassNoField = value;
                    this.RaisePropertyChanged("intClassNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> intDist {
            get {
                return this.intDistField;
            }
            set {
                if ((this.intDistField.Equals(value) != true)) {
                    this.intDistField = value;
                    this.RaisePropertyChanged("intDist");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strAgencyNameAr {
            get {
                return this.strAgencyNameArField;
            }
            set {
                if ((object.ReferenceEquals(this.strAgencyNameArField, value) != true)) {
                    this.strAgencyNameArField = value;
                    this.RaisePropertyChanged("strAgencyNameAr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strAgencyNameEn {
            get {
                return this.strAgencyNameEnField;
            }
            set {
                if ((object.ReferenceEquals(this.strAgencyNameEnField, value) != true)) {
                    this.strAgencyNameEnField = value;
                    this.RaisePropertyChanged("strAgencyNameEn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strClassNoAr {
            get {
                return this.strClassNoArField;
            }
            set {
                if ((object.ReferenceEquals(this.strClassNoArField, value) != true)) {
                    this.strClassNoArField = value;
                    this.RaisePropertyChanged("strClassNoAr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strClassNoEn {
            get {
                return this.strClassNoEnField;
            }
            set {
                if ((object.ReferenceEquals(this.strClassNoEnField, value) != true)) {
                    this.strClassNoEnField = value;
                    this.RaisePropertyChanged("strClassNoEn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strCompanyType {
            get {
                return this.strCompanyTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.strCompanyTypeField, value) != true)) {
                    this.strCompanyTypeField = value;
                    this.RaisePropertyChanged("strCompanyType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strCompanyTypeDescAr {
            get {
                return this.strCompanyTypeDescArField;
            }
            set {
                if ((object.ReferenceEquals(this.strCompanyTypeDescArField, value) != true)) {
                    this.strCompanyTypeDescArField = value;
                    this.RaisePropertyChanged("strCompanyTypeDescAr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strCompanyTypeDescEn {
            get {
                return this.strCompanyTypeDescEnField;
            }
            set {
                if ((object.ReferenceEquals(this.strCompanyTypeDescEnField, value) != true)) {
                    this.strCompanyTypeDescEnField = value;
                    this.RaisePropertyChanged("strCompanyTypeDescEn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strCountryCode {
            get {
                return this.strCountryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.strCountryCodeField, value) != true)) {
                    this.strCountryCodeField = value;
                    this.RaisePropertyChanged("strCountryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strCountryCodeDescAr {
            get {
                return this.strCountryCodeDescArField;
            }
            set {
                if ((object.ReferenceEquals(this.strCountryCodeDescArField, value) != true)) {
                    this.strCountryCodeDescArField = value;
                    this.RaisePropertyChanged("strCountryCodeDescAr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strCountryCodeDescEn {
            get {
                return this.strCountryCodeDescEnField;
            }
            set {
                if ((object.ReferenceEquals(this.strCountryCodeDescEnField, value) != true)) {
                    this.strCountryCodeDescEnField = value;
                    this.RaisePropertyChanged("strCountryCodeDescEn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strTradeMarkArName {
            get {
                return this.strTradeMarkArNameField;
            }
            set {
                if ((object.ReferenceEquals(this.strTradeMarkArNameField, value) != true)) {
                    this.strTradeMarkArNameField = value;
                    this.RaisePropertyChanged("strTradeMarkArName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strTradeMarkEnName {
            get {
                return this.strTradeMarkEnNameField;
            }
            set {
                if ((object.ReferenceEquals(this.strTradeMarkEnNameField, value) != true)) {
                    this.strTradeMarkEnNameField = value;
                    this.RaisePropertyChanged("strTradeMarkEnName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strTradeMarkOwnerAddressAr {
            get {
                return this.strTradeMarkOwnerAddressArField;
            }
            set {
                if ((object.ReferenceEquals(this.strTradeMarkOwnerAddressArField, value) != true)) {
                    this.strTradeMarkOwnerAddressArField = value;
                    this.RaisePropertyChanged("strTradeMarkOwnerAddressAr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strTradeMarkOwnerAddressEn {
            get {
                return this.strTradeMarkOwnerAddressEnField;
            }
            set {
                if ((object.ReferenceEquals(this.strTradeMarkOwnerAddressEnField, value) != true)) {
                    this.strTradeMarkOwnerAddressEnField = value;
                    this.RaisePropertyChanged("strTradeMarkOwnerAddressEn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strTradeMarkOwnerAr {
            get {
                return this.strTradeMarkOwnerArField;
            }
            set {
                if ((object.ReferenceEquals(this.strTradeMarkOwnerArField, value) != true)) {
                    this.strTradeMarkOwnerArField = value;
                    this.RaisePropertyChanged("strTradeMarkOwnerAr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strTradeMarkOwnerCityAr {
            get {
                return this.strTradeMarkOwnerCityArField;
            }
            set {
                if ((object.ReferenceEquals(this.strTradeMarkOwnerCityArField, value) != true)) {
                    this.strTradeMarkOwnerCityArField = value;
                    this.RaisePropertyChanged("strTradeMarkOwnerCityAr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strTradeMarkOwnerCityEn {
            get {
                return this.strTradeMarkOwnerCityEnField;
            }
            set {
                if ((object.ReferenceEquals(this.strTradeMarkOwnerCityEnField, value) != true)) {
                    this.strTradeMarkOwnerCityEnField = value;
                    this.RaisePropertyChanged("strTradeMarkOwnerCityEn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strTradeMarkOwnerCountry {
            get {
                return this.strTradeMarkOwnerCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.strTradeMarkOwnerCountryField, value) != true)) {
                    this.strTradeMarkOwnerCountryField = value;
                    this.RaisePropertyChanged("strTradeMarkOwnerCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strTradeMarkOwnerEn {
            get {
                return this.strTradeMarkOwnerEnField;
            }
            set {
                if ((object.ReferenceEquals(this.strTradeMarkOwnerEnField, value) != true)) {
                    this.strTradeMarkOwnerEnField = value;
                    this.RaisePropertyChanged("strTradeMarkOwnerEn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strTradeMarkOwnerTel {
            get {
                return this.strTradeMarkOwnerTelField;
            }
            set {
                if ((object.ReferenceEquals(this.strTradeMarkOwnerTelField, value) != true)) {
                    this.strTradeMarkOwnerTelField = value;
                    this.RaisePropertyChanged("strTradeMarkOwnerTel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strTradeMarkStatus {
            get {
                return this.strTradeMarkStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.strTradeMarkStatusField, value) != true)) {
                    this.strTradeMarkStatusField = value;
                    this.RaisePropertyChanged("strTradeMarkStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strTradeMarkStatusDescAr {
            get {
                return this.strTradeMarkStatusDescArField;
            }
            set {
                if ((object.ReferenceEquals(this.strTradeMarkStatusDescArField, value) != true)) {
                    this.strTradeMarkStatusDescArField = value;
                    this.RaisePropertyChanged("strTradeMarkStatusDescAr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strTradeMarkStatusDescEn {
            get {
                return this.strTradeMarkStatusDescEnField;
            }
            set {
                if ((object.ReferenceEquals(this.strTradeMarkStatusDescEnField, value) != true)) {
                    this.strTradeMarkStatusDescEnField = value;
                    this.RaisePropertyChanged("strTradeMarkStatusDescEn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string trdmark_status {
            get {
                return this.trdmark_statusField;
            }
            set {
                if ((object.ReferenceEquals(this.trdmark_statusField, value) != true)) {
                    this.trdmark_statusField = value;
                    this.RaisePropertyChanged("trdmark_status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RegisteryPurposes", Namespace="http://schemas.datacontract.org/2004/07/MoICT.Entities")]
    [System.SerializableAttribute()]
    public partial class RegisteryPurposes : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string aim_descField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string aim_desc {
            get {
                return this.aim_descField;
            }
            set {
                if ((object.ReferenceEquals(this.aim_descField, value) != true)) {
                    this.aim_descField = value;
                    this.RaisePropertyChanged("aim_desc");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MOICTException", Namespace="http://schemas.datacontract.org/2004/07/MOICT")]
    [System.SerializableAttribute()]
    public partial class MOICTException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProblemTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorCodeField, value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Operation {
            get {
                return this.OperationField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationField, value) != true)) {
                    this.OperationField = value;
                    this.RaisePropertyChanged("Operation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProblemType {
            get {
                return this.ProblemTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProblemTypeField, value) != true)) {
                    this.ProblemTypeField = value;
                    this.RaisePropertyChanged("ProblemType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TradeMarksLogo", Namespace="http://schemas.datacontract.org/2004/07/MoICT.Entities")]
    [System.SerializableAttribute()]
    public partial class TradeMarksLogo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] tms_pictField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] tms_pict {
            get {
                return this.tms_pictField;
            }
            set {
                if ((object.ReferenceEquals(this.tms_pictField, value) != true)) {
                    this.tms_pictField = value;
                    this.RaisePropertyChanged("tms_pict");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ccd_name", Namespace="http://schemas.datacontract.org/2004/07/MoICT.Entities")]
    [System.SerializableAttribute()]
    public partial class ccd_name : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ARMERCHANTNAMEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ArnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ID_NUMBERField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegcnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ARMERCHANTNAME {
            get {
                return this.ARMERCHANTNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.ARMERCHANTNAMEField, value) != true)) {
                    this.ARMERCHANTNAMEField = value;
                    this.RaisePropertyChanged("ARMERCHANTNAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Arname {
            get {
                return this.ArnameField;
            }
            set {
                if ((object.ReferenceEquals(this.ArnameField, value) != true)) {
                    this.ArnameField = value;
                    this.RaisePropertyChanged("Arname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID_NUMBER {
            get {
                return this.ID_NUMBERField;
            }
            set {
                if ((object.ReferenceEquals(this.ID_NUMBERField, value) != true)) {
                    this.ID_NUMBERField = value;
                    this.RaisePropertyChanged("ID_NUMBER");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Regcn {
            get {
                return this.RegcnField;
            }
            set {
                if ((object.ReferenceEquals(this.RegcnField, value) != true)) {
                    this.RegcnField = value;
                    this.RaisePropertyChanged("Regcn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Logo_mark", Namespace="http://schemas.datacontract.org/2004/07/MoICT.Entities")]
    [System.SerializableAttribute()]
    public partial class Logo_mark : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Company_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Expiration_daterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string File_nbrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Gral_person_id_nbrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Gral_person_id_typField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] Logo_dataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Mark_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Mark_name_lang2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Registration_dateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Registration_nbrField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company_name {
            get {
                return this.Company_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.Company_nameField, value) != true)) {
                    this.Company_nameField = value;
                    this.RaisePropertyChanged("Company_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Expiration_dater {
            get {
                return this.Expiration_daterField;
            }
            set {
                if ((this.Expiration_daterField.Equals(value) != true)) {
                    this.Expiration_daterField = value;
                    this.RaisePropertyChanged("Expiration_dater");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string File_nbr {
            get {
                return this.File_nbrField;
            }
            set {
                if ((object.ReferenceEquals(this.File_nbrField, value) != true)) {
                    this.File_nbrField = value;
                    this.RaisePropertyChanged("File_nbr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gral_person_id_nbr {
            get {
                return this.Gral_person_id_nbrField;
            }
            set {
                if ((object.ReferenceEquals(this.Gral_person_id_nbrField, value) != true)) {
                    this.Gral_person_id_nbrField = value;
                    this.RaisePropertyChanged("Gral_person_id_nbr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gral_person_id_typ {
            get {
                return this.Gral_person_id_typField;
            }
            set {
                if ((object.ReferenceEquals(this.Gral_person_id_typField, value) != true)) {
                    this.Gral_person_id_typField = value;
                    this.RaisePropertyChanged("Gral_person_id_typ");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Logo_data {
            get {
                return this.Logo_dataField;
            }
            set {
                if ((object.ReferenceEquals(this.Logo_dataField, value) != true)) {
                    this.Logo_dataField = value;
                    this.RaisePropertyChanged("Logo_data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mark_name {
            get {
                return this.Mark_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.Mark_nameField, value) != true)) {
                    this.Mark_nameField = value;
                    this.RaisePropertyChanged("Mark_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mark_name_lang2 {
            get {
                return this.Mark_name_lang2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Mark_name_lang2Field, value) != true)) {
                    this.Mark_name_lang2Field = value;
                    this.RaisePropertyChanged("Mark_name_lang2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Registration_date {
            get {
                return this.Registration_dateField;
            }
            set {
                if ((this.Registration_dateField.Equals(value) != true)) {
                    this.Registration_dateField = value;
                    this.RaisePropertyChanged("Registration_date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Registration_nbr {
            get {
                return this.Registration_nbrField;
            }
            set {
                if ((object.ReferenceEquals(this.Registration_nbrField, value) != true)) {
                    this.Registration_nbrField = value;
                    this.RaisePropertyChanged("Registration_nbr");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InstituteInformation", Namespace="http://schemas.datacontract.org/2004/07/MoICT.Entities")]
    [System.SerializableAttribute()]
    public partial class InstituteInformation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal IDNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal decCapitalValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal decCurrentCapitalValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal decGoverCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal decIndivIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal decNationalityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal decOwnerNationalNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal decRegNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime decRegistrationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal decRegistrationNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal decRegistryNationalNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dtmRegistryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strAuthorized1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strAuthorized2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strGovernorateNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strInstituteStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strNationalityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strOwnerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strRegistrationNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal IDNumber {
            get {
                return this.IDNumberField;
            }
            set {
                if ((this.IDNumberField.Equals(value) != true)) {
                    this.IDNumberField = value;
                    this.RaisePropertyChanged("IDNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal decCapitalValue {
            get {
                return this.decCapitalValueField;
            }
            set {
                if ((this.decCapitalValueField.Equals(value) != true)) {
                    this.decCapitalValueField = value;
                    this.RaisePropertyChanged("decCapitalValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal decCurrentCapitalValue {
            get {
                return this.decCurrentCapitalValueField;
            }
            set {
                if ((this.decCurrentCapitalValueField.Equals(value) != true)) {
                    this.decCurrentCapitalValueField = value;
                    this.RaisePropertyChanged("decCurrentCapitalValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal decGoverCode {
            get {
                return this.decGoverCodeField;
            }
            set {
                if ((this.decGoverCodeField.Equals(value) != true)) {
                    this.decGoverCodeField = value;
                    this.RaisePropertyChanged("decGoverCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal decIndivID {
            get {
                return this.decIndivIDField;
            }
            set {
                if ((this.decIndivIDField.Equals(value) != true)) {
                    this.decIndivIDField = value;
                    this.RaisePropertyChanged("decIndivID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal decNationalityCode {
            get {
                return this.decNationalityCodeField;
            }
            set {
                if ((this.decNationalityCodeField.Equals(value) != true)) {
                    this.decNationalityCodeField = value;
                    this.RaisePropertyChanged("decNationalityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal decOwnerNationalNo {
            get {
                return this.decOwnerNationalNoField;
            }
            set {
                if ((this.decOwnerNationalNoField.Equals(value) != true)) {
                    this.decOwnerNationalNoField = value;
                    this.RaisePropertyChanged("decOwnerNationalNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal decRegNo {
            get {
                return this.decRegNoField;
            }
            set {
                if ((this.decRegNoField.Equals(value) != true)) {
                    this.decRegNoField = value;
                    this.RaisePropertyChanged("decRegNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime decRegistrationDate {
            get {
                return this.decRegistrationDateField;
            }
            set {
                if ((this.decRegistrationDateField.Equals(value) != true)) {
                    this.decRegistrationDateField = value;
                    this.RaisePropertyChanged("decRegistrationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal decRegistrationNo {
            get {
                return this.decRegistrationNoField;
            }
            set {
                if ((this.decRegistrationNoField.Equals(value) != true)) {
                    this.decRegistrationNoField = value;
                    this.RaisePropertyChanged("decRegistrationNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal decRegistryNationalNo {
            get {
                return this.decRegistryNationalNoField;
            }
            set {
                if ((this.decRegistryNationalNoField.Equals(value) != true)) {
                    this.decRegistryNationalNoField = value;
                    this.RaisePropertyChanged("decRegistryNationalNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dtmRegistryDate {
            get {
                return this.dtmRegistryDateField;
            }
            set {
                if ((this.dtmRegistryDateField.Equals(value) != true)) {
                    this.dtmRegistryDateField = value;
                    this.RaisePropertyChanged("dtmRegistryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strAuthorized1 {
            get {
                return this.strAuthorized1Field;
            }
            set {
                if ((object.ReferenceEquals(this.strAuthorized1Field, value) != true)) {
                    this.strAuthorized1Field = value;
                    this.RaisePropertyChanged("strAuthorized1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strAuthorized2 {
            get {
                return this.strAuthorized2Field;
            }
            set {
                if ((object.ReferenceEquals(this.strAuthorized2Field, value) != true)) {
                    this.strAuthorized2Field = value;
                    this.RaisePropertyChanged("strAuthorized2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strGovernorateName {
            get {
                return this.strGovernorateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.strGovernorateNameField, value) != true)) {
                    this.strGovernorateNameField = value;
                    this.RaisePropertyChanged("strGovernorateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strInstituteStatus {
            get {
                return this.strInstituteStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.strInstituteStatusField, value) != true)) {
                    this.strInstituteStatusField = value;
                    this.RaisePropertyChanged("strInstituteStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strNationalityDescription {
            get {
                return this.strNationalityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.strNationalityDescriptionField, value) != true)) {
                    this.strNationalityDescriptionField = value;
                    this.RaisePropertyChanged("strNationalityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strOwnerName {
            get {
                return this.strOwnerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.strOwnerNameField, value) != true)) {
                    this.strOwnerNameField = value;
                    this.RaisePropertyChanged("strOwnerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strRegistrationName {
            get {
                return this.strRegistrationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.strRegistrationNameField, value) != true)) {
                    this.strRegistrationNameField = value;
                    this.RaisePropertyChanged("strRegistrationName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Intended", Namespace="http://schemas.datacontract.org/2004/07/MoICT.Entities")]
    [System.SerializableAttribute()]
    public partial class Intended : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal intendedCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string intendedDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal sharedCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal intendedCode {
            get {
                return this.intendedCodeField;
            }
            set {
                if ((this.intendedCodeField.Equals(value) != true)) {
                    this.intendedCodeField = value;
                    this.RaisePropertyChanged("intendedCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string intendedDescription {
            get {
                return this.intendedDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.intendedDescriptionField, value) != true)) {
                    this.intendedDescriptionField = value;
                    this.RaisePropertyChanged("intendedDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal sharedCode {
            get {
                return this.sharedCodeField;
            }
            set {
                if ((this.sharedCodeField.Equals(value) != true)) {
                    this.sharedCodeField = value;
                    this.RaisePropertyChanged("sharedCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Modifications", Namespace="http://schemas.datacontract.org/2004/07/MoICT.Entities")]
    [System.SerializableAttribute()]
    public partial class Modifications : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModificationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModificationDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string afterModificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string beforeModificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal decGoverCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal decInstituteRegistrationNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal sharedCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModificationDate {
            get {
                return this.ModificationDateField;
            }
            set {
                if ((this.ModificationDateField.Equals(value) != true)) {
                    this.ModificationDateField = value;
                    this.RaisePropertyChanged("ModificationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModificationDescription {
            get {
                return this.ModificationDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ModificationDescriptionField, value) != true)) {
                    this.ModificationDescriptionField = value;
                    this.RaisePropertyChanged("ModificationDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string afterModification {
            get {
                return this.afterModificationField;
            }
            set {
                if ((object.ReferenceEquals(this.afterModificationField, value) != true)) {
                    this.afterModificationField = value;
                    this.RaisePropertyChanged("afterModification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string beforeModification {
            get {
                return this.beforeModificationField;
            }
            set {
                if ((object.ReferenceEquals(this.beforeModificationField, value) != true)) {
                    this.beforeModificationField = value;
                    this.RaisePropertyChanged("beforeModification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal decGoverCode {
            get {
                return this.decGoverCodeField;
            }
            set {
                if ((this.decGoverCodeField.Equals(value) != true)) {
                    this.decGoverCodeField = value;
                    this.RaisePropertyChanged("decGoverCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal decInstituteRegistrationNo {
            get {
                return this.decInstituteRegistrationNoField;
            }
            set {
                if ((this.decInstituteRegistrationNoField.Equals(value) != true)) {
                    this.decInstituteRegistrationNoField = value;
                    this.RaisePropertyChanged("decInstituteRegistrationNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal sharedCode {
            get {
                return this.sharedCodeField;
            }
            set {
                if ((this.sharedCodeField.Equals(value) != true)) {
                    this.sharedCodeField = value;
                    this.RaisePropertyChanged("sharedCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IMITService")]
    public interface IMITService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMITService/getRegisteryInfoByIndividualNationalNumber", ReplyAction="http://tempuri.org/IMITService/getRegisteryInfoByIndividualNationalNumberResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(ServiceTestClient.ServiceReference1.MOICTException), Action="http://tempuri.org/IMITService/getRegisteryInfoByIndividualNationalNumberMOICTExc" +
            "eptionFault", Name="MOICTException", Namespace="http://schemas.datacontract.org/2004/07/MOICT")]
        ServiceTestClient.ServiceReference1.CentralRegistration[] getRegisteryInfoByIndividualNationalNumber(string NationalNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMITService/getRegisteryInfoByIndividualNationalNumber", ReplyAction="http://tempuri.org/IMITService/getRegisteryInfoByIndividualNationalNumberResponse" +
            "")]
        System.Threading.Tasks.Task<ServiceTestClient.ServiceReference1.CentralRegistration[]> getRegisteryInfoByIndividualNationalNumberAsync(string NationalNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMITService/getRegisteryInfoByEstablishmentNationalNumber", ReplyAction="http://tempuri.org/IMITService/getRegisteryInfoByEstablishmentNationalNumberRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ServiceTestClient.ServiceReference1.MOICTException), Action="http://tempuri.org/IMITService/getRegisteryInfoByEstablishmentNationalNumberMOICT" +
            "ExceptionFault", Name="MOICTException", Namespace="http://schemas.datacontract.org/2004/07/MOICT")]
        ServiceTestClient.ServiceReference1.CentralRegistration getRegisteryInfoByEstablishmentNationalNumber(string NationalNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMITService/getRegisteryInfoByEstablishmentNationalNumber", ReplyAction="http://tempuri.org/IMITService/getRegisteryInfoByEstablishmentNationalNumberRespo" +
            "nse")]
        System.Threading.Tasks.Task<ServiceTestClient.ServiceReference1.CentralRegistration> getRegisteryInfoByEstablishmentNationalNumberAsync(string NationalNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMITService/getTradeMarkLogoBy", ReplyAction="http://tempuri.org/IMITService/getTradeMarkLogoByResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ServiceTestClient.ServiceReference1.MOICTException), Action="http://tempuri.org/IMITService/getTradeMarkLogoByMOICTExceptionFault", Name="MOICTException", Namespace="http://schemas.datacontract.org/2004/07/MOICT")]
        ServiceTestClient.ServiceReference1.TradeMarksLogo getTradeMarkLogoBy(string trdmark_no, string dist);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMITService/getTradeMarkLogoBy", ReplyAction="http://tempuri.org/IMITService/getTradeMarkLogoByResponse")]
        System.Threading.Tasks.Task<ServiceTestClient.ServiceReference1.TradeMarksLogo> getTradeMarkLogoByAsync(string trdmark_no, string dist);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMITService/getccd_name", ReplyAction="http://tempuri.org/IMITService/getccd_nameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ServiceTestClient.ServiceReference1.MOICTException), Action="http://tempuri.org/IMITService/getccd_nameMOICTExceptionFault", Name="MOICTException", Namespace="http://schemas.datacontract.org/2004/07/MOICT")]
        ServiceTestClient.ServiceReference1.ccd_name[] getccd_name(string NationalNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMITService/getccd_name", ReplyAction="http://tempuri.org/IMITService/getccd_nameResponse")]
        System.Threading.Tasks.Task<ServiceTestClient.ServiceReference1.ccd_name[]> getccd_nameAsync(string NationalNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMITService/getccd_mark", ReplyAction="http://tempuri.org/IMITService/getccd_markResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ServiceTestClient.ServiceReference1.MOICTException), Action="http://tempuri.org/IMITService/getccd_markMOICTExceptionFault", Name="MOICTException", Namespace="http://schemas.datacontract.org/2004/07/MOICT")]
        ServiceTestClient.ServiceReference1.Logo_mark[] getccd_mark(string NationalNo, string typeid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMITService/getccd_mark", ReplyAction="http://tempuri.org/IMITService/getccd_markResponse")]
        System.Threading.Tasks.Task<ServiceTestClient.ServiceReference1.Logo_mark[]> getccd_markAsync(string NationalNo, string typeid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMITService/getIndividualRegistry", ReplyAction="http://tempuri.org/IMITService/getIndividualRegistryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ServiceTestClient.ServiceReference1.MOICTException), Action="http://tempuri.org/IMITService/getIndividualRegistryMOICTExceptionFault", Name="MOICTException", Namespace="http://schemas.datacontract.org/2004/07/MOICT")]
        ServiceTestClient.ServiceReference1.CentralRegistration getIndividualRegistry(long registryNationalNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMITService/getIndividualRegistry", ReplyAction="http://tempuri.org/IMITService/getIndividualRegistryResponse")]
        System.Threading.Tasks.Task<ServiceTestClient.ServiceReference1.CentralRegistration> getIndividualRegistryAsync(long registryNationalNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMITService/getTradeMark", ReplyAction="http://tempuri.org/IMITService/getTradeMarkResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ServiceTestClient.ServiceReference1.MOICTException), Action="http://tempuri.org/IMITService/getTradeMarkMOICTExceptionFault", Name="MOICTException", Namespace="http://schemas.datacontract.org/2004/07/MOICT")]
        ServiceTestClient.ServiceReference1.TradeMark[] getTradeMark(string key, int keyCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMITService/getTradeMark", ReplyAction="http://tempuri.org/IMITService/getTradeMarkResponse")]
        System.Threading.Tasks.Task<ServiceTestClient.ServiceReference1.TradeMark[]> getTradeMarkAsync(string key, int keyCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMITService/GetRegistryPurposeByIndvID", ReplyAction="http://tempuri.org/IMITService/GetRegistryPurposeByIndvIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ServiceTestClient.ServiceReference1.MOICTException), Action="http://tempuri.org/IMITService/GetRegistryPurposeByIndvIDMOICTExceptionFault", Name="MOICTException", Namespace="http://schemas.datacontract.org/2004/07/MOICT")]
        string GetRegistryPurposeByIndvID(long intIndvID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMITService/GetRegistryPurposeByIndvID", ReplyAction="http://tempuri.org/IMITService/GetRegistryPurposeByIndvIDResponse")]
        System.Threading.Tasks.Task<string> GetRegistryPurposeByIndvIDAsync(long intIndvID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMITService/GetInstitiuteInfobyIDNumber", ReplyAction="http://tempuri.org/IMITService/GetInstitiuteInfobyIDNumberResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ServiceTestClient.ServiceReference1.MOICTException), Action="http://tempuri.org/IMITService/GetInstitiuteInfobyIDNumberMOICTExceptionFault", Name="MOICTException", Namespace="http://schemas.datacontract.org/2004/07/MOICT")]
        ServiceTestClient.ServiceReference1.InstituteInformation GetInstitiuteInfobyIDNumber(string ID_NUMBER);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMITService/GetInstitiuteInfobyIDNumber", ReplyAction="http://tempuri.org/IMITService/GetInstitiuteInfobyIDNumberResponse")]
        System.Threading.Tasks.Task<ServiceTestClient.ServiceReference1.InstituteInformation> GetInstitiuteInfobyIDNumberAsync(string ID_NUMBER);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMITService/getIntendedBySharedCode", ReplyAction="http://tempuri.org/IMITService/getIntendedBySharedCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ServiceTestClient.ServiceReference1.MOICTException), Action="http://tempuri.org/IMITService/getIntendedBySharedCodeMOICTExceptionFault", Name="MOICTException", Namespace="http://schemas.datacontract.org/2004/07/MOICT")]
        ServiceTestClient.ServiceReference1.Intended[] getIntendedBySharedCode(string sharedCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMITService/getIntendedBySharedCode", ReplyAction="http://tempuri.org/IMITService/getIntendedBySharedCodeResponse")]
        System.Threading.Tasks.Task<ServiceTestClient.ServiceReference1.Intended[]> getIntendedBySharedCodeAsync(string sharedCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMITService/getModificationsByRegistrationNoGover", ReplyAction="http://tempuri.org/IMITService/getModificationsByRegistrationNoGoverResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ServiceTestClient.ServiceReference1.MOICTException), Action="http://tempuri.org/IMITService/getModificationsByRegistrationNoGoverMOICTExceptio" +
            "nFault", Name="MOICTException", Namespace="http://schemas.datacontract.org/2004/07/MOICT")]
        ServiceTestClient.ServiceReference1.Modifications[] getModificationsByRegistrationNoGover(string sharedCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMITService/getModificationsByRegistrationNoGover", ReplyAction="http://tempuri.org/IMITService/getModificationsByRegistrationNoGoverResponse")]
        System.Threading.Tasks.Task<ServiceTestClient.ServiceReference1.Modifications[]> getModificationsByRegistrationNoGoverAsync(string sharedCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMITService/GetInstitiuteInfobyTradeName", ReplyAction="http://tempuri.org/IMITService/GetInstitiuteInfobyTradeNameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ServiceTestClient.ServiceReference1.MOICTException), Action="http://tempuri.org/IMITService/GetInstitiuteInfobyTradeNameMOICTExceptionFault", Name="MOICTException", Namespace="http://schemas.datacontract.org/2004/07/MOICT")]
        ServiceTestClient.ServiceReference1.InstituteInformation[] GetInstitiuteInfobyTradeName(string strTradeName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMITService/GetInstitiuteInfobyTradeName", ReplyAction="http://tempuri.org/IMITService/GetInstitiuteInfobyTradeNameResponse")]
        System.Threading.Tasks.Task<ServiceTestClient.ServiceReference1.InstituteInformation[]> GetInstitiuteInfobyTradeNameAsync(string strTradeName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMITServiceChannel : ServiceTestClient.ServiceReference1.IMITService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MITServiceClient : System.ServiceModel.ClientBase<ServiceTestClient.ServiceReference1.IMITService>, ServiceTestClient.ServiceReference1.IMITService {
        
        public MITServiceClient() {
        }
        
        public MITServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MITServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MITServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MITServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ServiceTestClient.ServiceReference1.CentralRegistration[] getRegisteryInfoByIndividualNationalNumber(string NationalNo) {
            return base.Channel.getRegisteryInfoByIndividualNationalNumber(NationalNo);
        }
        
        public System.Threading.Tasks.Task<ServiceTestClient.ServiceReference1.CentralRegistration[]> getRegisteryInfoByIndividualNationalNumberAsync(string NationalNo) {
            return base.Channel.getRegisteryInfoByIndividualNationalNumberAsync(NationalNo);
        }
        
        public ServiceTestClient.ServiceReference1.CentralRegistration getRegisteryInfoByEstablishmentNationalNumber(string NationalNo) {
            return base.Channel.getRegisteryInfoByEstablishmentNationalNumber(NationalNo);
        }
        
        public System.Threading.Tasks.Task<ServiceTestClient.ServiceReference1.CentralRegistration> getRegisteryInfoByEstablishmentNationalNumberAsync(string NationalNo) {
            return base.Channel.getRegisteryInfoByEstablishmentNationalNumberAsync(NationalNo);
        }
        
        public ServiceTestClient.ServiceReference1.TradeMarksLogo getTradeMarkLogoBy(string trdmark_no, string dist) {
            return base.Channel.getTradeMarkLogoBy(trdmark_no, dist);
        }
        
        public System.Threading.Tasks.Task<ServiceTestClient.ServiceReference1.TradeMarksLogo> getTradeMarkLogoByAsync(string trdmark_no, string dist) {
            return base.Channel.getTradeMarkLogoByAsync(trdmark_no, dist);
        }
        
        public ServiceTestClient.ServiceReference1.ccd_name[] getccd_name(string NationalNo) {
            return base.Channel.getccd_name(NationalNo);
        }
        
        public System.Threading.Tasks.Task<ServiceTestClient.ServiceReference1.ccd_name[]> getccd_nameAsync(string NationalNo) {
            return base.Channel.getccd_nameAsync(NationalNo);
        }
        
        public ServiceTestClient.ServiceReference1.Logo_mark[] getccd_mark(string NationalNo, string typeid) {
            return base.Channel.getccd_mark(NationalNo, typeid);
        }
        
        public System.Threading.Tasks.Task<ServiceTestClient.ServiceReference1.Logo_mark[]> getccd_markAsync(string NationalNo, string typeid) {
            return base.Channel.getccd_markAsync(NationalNo, typeid);
        }
        
        public ServiceTestClient.ServiceReference1.CentralRegistration getIndividualRegistry(long registryNationalNo) {
            return base.Channel.getIndividualRegistry(registryNationalNo);
        }
        
        public System.Threading.Tasks.Task<ServiceTestClient.ServiceReference1.CentralRegistration> getIndividualRegistryAsync(long registryNationalNo) {
            return base.Channel.getIndividualRegistryAsync(registryNationalNo);
        }
        
        public ServiceTestClient.ServiceReference1.TradeMark[] getTradeMark(string key, int keyCode) {
            return base.Channel.getTradeMark(key, keyCode);
        }
        
        public System.Threading.Tasks.Task<ServiceTestClient.ServiceReference1.TradeMark[]> getTradeMarkAsync(string key, int keyCode) {
            return base.Channel.getTradeMarkAsync(key, keyCode);
        }
        
        public string GetRegistryPurposeByIndvID(long intIndvID) {
            return base.Channel.GetRegistryPurposeByIndvID(intIndvID);
        }
        
        public System.Threading.Tasks.Task<string> GetRegistryPurposeByIndvIDAsync(long intIndvID) {
            return base.Channel.GetRegistryPurposeByIndvIDAsync(intIndvID);
        }
        
        public ServiceTestClient.ServiceReference1.InstituteInformation GetInstitiuteInfobyIDNumber(string ID_NUMBER) {
            return base.Channel.GetInstitiuteInfobyIDNumber(ID_NUMBER);
        }
        
        public System.Threading.Tasks.Task<ServiceTestClient.ServiceReference1.InstituteInformation> GetInstitiuteInfobyIDNumberAsync(string ID_NUMBER) {
            return base.Channel.GetInstitiuteInfobyIDNumberAsync(ID_NUMBER);
        }
        
        public ServiceTestClient.ServiceReference1.Intended[] getIntendedBySharedCode(string sharedCode) {
            return base.Channel.getIntendedBySharedCode(sharedCode);
        }
        
        public System.Threading.Tasks.Task<ServiceTestClient.ServiceReference1.Intended[]> getIntendedBySharedCodeAsync(string sharedCode) {
            return base.Channel.getIntendedBySharedCodeAsync(sharedCode);
        }
        
        public ServiceTestClient.ServiceReference1.Modifications[] getModificationsByRegistrationNoGover(string sharedCode) {
            return base.Channel.getModificationsByRegistrationNoGover(sharedCode);
        }
        
        public System.Threading.Tasks.Task<ServiceTestClient.ServiceReference1.Modifications[]> getModificationsByRegistrationNoGoverAsync(string sharedCode) {
            return base.Channel.getModificationsByRegistrationNoGoverAsync(sharedCode);
        }
        
        public ServiceTestClient.ServiceReference1.InstituteInformation[] GetInstitiuteInfobyTradeName(string strTradeName) {
            return base.Channel.GetInstitiuteInfobyTradeName(strTradeName);
        }
        
        public System.Threading.Tasks.Task<ServiceTestClient.ServiceReference1.InstituteInformation[]> GetInstitiuteInfobyTradeNameAsync(string strTradeName) {
            return base.Channel.GetInstitiuteInfobyTradeNameAsync(strTradeName);
        }
    }
}
